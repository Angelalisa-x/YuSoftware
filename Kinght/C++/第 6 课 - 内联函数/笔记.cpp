内联函数(inline)：
    内联函数没有普通函数调用的额外开销（压栈，跳转，出栈）
    请求编译器内联（编译器可能会拒绝）
    内联函数被内联后，函数体直接扩展到调用的地方（通过调试工具看汇编代码）
    所以：
        在C++开发中首选内联函数

    一些现代的C++编译器提供了扩展语法，能够对函数强制进行内联：
        g++: __attribute__((always_inline))
        MSVC: _forceinline

    取代宏定义